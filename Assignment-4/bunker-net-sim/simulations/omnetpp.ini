[Config General]
network = Network

sim-time-limit 		= 500s
seed-0-mt           = 1

output-scalar-file  = results/General/General.sca
output-vector-file  = results/General/General.vec
eventlog-file = results/event.elog
snapshot-file = results/snapshot.sna

# Configurator settings
*.configurator.dumpAddresses = true
*.configurator.dumpTopology = true
*.configurator.dumpLinks = true
*.configurator.dumpRoutes = true
*.configurator.config = xmldoc("config.xml")

# Visualizer settings
*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.interfaceTableVisualizer.nodeFilter = "bunker*gnb* or bunker*host or server or upf or iUpf or bunker*host[*] or ualcmp"

# Link settings
*.cableBandwidth = 100Mbps
*.cableLength = 2km
*.closeCableBandwidth = 100Mbps
*.closeCableLength = 1km

*.cableBandwidth.param-record-as-scalar = true
*.cableLength.param-record-as-scalar = true

# Routing settings
*.*.ipv4.arp.typename = "GlobalArp"
*.*.ipv4.routingTable.netmaskRoutes = ""

# Router settings
*.*router.ppp[*].queue.typename = "DropTailQueue"
*.*router.ppp[*].queue.packetCapacity = 10

*.*upf.ppp[*].queue.typename = "DropTailQueue"
*.*upf.ppp[*].queue.packetCapacity = 10

*.server.numApps = 1
*.server.app[0].typename = "ServerApp"
*.server.app[0].heartbeatThreshold = 15

# Bunker & Host numbers
*.bunker1_host_number = ${b1num=int(uniform(2, 5))}
*.bunker2_host_number = ${b2num=int(uniform(2, 5))}
*.bunker3_host_number = ${b3num=int(uniform(2, 5))}
*.nonExist_host_number = ${xnum=int(uniform(1, 2))}

*.nonExist_host_number.param-record-as-scalar = true
*.bunker1_host_number.param-record-as-scalar = true
*.bunker2_host_number.param-record-as-scalar = true
*.bunker3_host_number.param-record-as-scalar = true
# -----------------------------------------------------------------
*.bunker1host[0].numApps = 4
*.bunker1host[0].app[3].typename = "DeviceApp"
*.bunker1host[0].app[3].localPort = 4500
*.bunker1host[0].app[3].UALCMPAddress = "ualcmp"
*.bunker1host[0].app[3].UALCMPPort = 1000
*.bunker1host[0].app[3].appPackageSource = "WarnerApp.json"

*.bunker1host[0].app[2].deviceAppAddress = "bunker1host[0]"
*.bunker1host[0].app[2].deviceAppPort = 4500
*.bunker1host[0].app[2].sendInterval = int(uniform(10s, 30s))
*.bunker1host[0].app[2].typename = "WarnerAdminApp"
*.bunker1host[0].app[2].bunkerId = 1
*.bunker1host[0].app[2].isCentralized = false
*.bunker1host[0].app[2].serverAddress = "server"
# -----------------------------------------------------------------
*.bunker2host[0].numApps = 4
*.bunker2host[0].app[3].typename = "DeviceApp"
*.bunker2host[0].app[3].localPort = 4500
*.bunker2host[0].app[3].UALCMPAddress = "ualcmp"
*.bunker2host[0].app[3].UALCMPPort = 1000
*.bunker2host[0].app[3].appPackageSource = "WarnerApp.json"

*.bunker2host[0].app[2].deviceAppAddress = "bunker2host[0]"
*.bunker2host[0].app[2].deviceAppPort = 4500
*.bunker2host[0].app[2].sendInterval = int(uniform(10s, 30s))
*.bunker2host[0].app[2].typename = "WarnerAdminApp"
*.bunker2host[0].app[2].bunkerId = 2
*.bunker2host[0].app[2].isCentralized = false
*.bunker2host[0].app[2].serverAddress = "server"
# -----------------------------------------------------------------
*.bunker3host[0].numApps = 4
*.bunker3host[0].app[3].typename = "DeviceApp"
*.bunker3host[0].app[3].localPort = 4500
*.bunker3host[0].app[3].UALCMPAddress = "ualcmp"
*.bunker3host[0].app[3].UALCMPPort = 1000
*.bunker3host[0].app[3].appPackageSource = "WarnerApp.json"

*.bunker3host[0].app[2].deviceAppAddress = "bunker3host[0]"
*.bunker3host[0].app[2].deviceAppPort = 4500
*.bunker3host[0].app[2].sendInterval = int(uniform(10s, 30s))
*.bunker3host[0].app[2].typename = "WarnerAdminApp"
*.bunker3host[0].app[2].bunkerId = 3
*.bunker3host[0].app[2].isCentralized = false
*.bunker3host[0].app[2].serverAddress = "server"
# -----------------------------------------------------------------
*.bunker*host[*].numApps = 2
*.bunker*host[*].app[*].destAddress = "server"
*.bunker*host[*].app[0].sendInterval = int(uniform(5s, 10s))
*.bunker*host[*].app[1].sendInterval = int(uniform(6s, 12s))
*.bunker*host[*].app[0].typename = "HeartBeatApp"
*.bunker*host[*].app[1].typename = "ClientApp"

*.bunker1host[*].app[0].bunkerId = 1
*.bunker2host[*].app[0].bunkerId = 2
*.bunker3host[*].app[0].bunkerId = 3

*.bunker*host[*].app[1].bunker1_host_number = ${b1num}
*.bunker*host[*].app[1].bunker2_host_number = ${b1num}
*.bunker*host[*].app[1].bunker3_host_number = ${b3num}
*.bunker*host[*].app[1].nonExist_host_number = ${xnum}
#----------------------------------------------------------------------------------------------------------------
**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26
**.eNodeBTxPower = 46
**.targetBler = 0.01
**.blerShift = 5  
**.fbPeriod = 120   # reports CQI every 120ms

**.sctp.nagleEnabled = false
**.sctp.enableHeartbeats = false

**.mac.schedulingDisciplineDl = "MAXCI" 
**.mac.schedulingDisciplineUl = "MAXCI"

**.dynamicCellAssociation = true
**.enableHandover = false

*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=50}
#----------------------------------------------------------------------------------------------------------------
*.bunker*gnb*.mobility.initFromDisplayString = false
*.bunker*gnb*.mobility.initialZ = 0m

*.bunker1gnb1.mobility.initialX = 450m
*.bunker1gnb1.mobility.initialY = 475m

*.bunker2gnb1.mobility.initialX = 1110m
*.bunker2gnb1.mobility.initialY = 3050m

*.bunker3gnb1.mobility.initialX = 4100m
*.bunker3gnb1.mobility.initialY = 475m
#----------------------------------------------------------------------------------------------------------------
*.bunker*host[*].macCellId = 0
*.bunker*host[*].masterId = 0
*.bunker*host[*].nrMacCellId = 1
*.bunker*host[*].nrMasterId = 1
#----------------------------------------------------------------------------------------------------------------
*.bunker*host[*].mobility.typename = "RandomWaypointMobility"
*.bunker*host[*].mobility.initFromDisplayString = false
*.bunker*host[*].mobility.speed = 2mps
*.bunker*host[*].mobility.initialZ = 0m
*.bunker*host[*].mobility.constraintAreaMinZ = 0m
*.bunker*host[*].mobility.constraintAreaMaxZ = 0m

*.bunker1host[*].mobility.initialMovementHeading = 90deg
*.bunker1host[*].mobility.initialX = 240m
*.bunker1host[*].mobility.initialY = 475m
*.bunker1host[*].mobility.constraintAreaMinX = 100m
*.bunker1host[*].mobility.constraintAreaMaxX = 400m
*.bunker1host[*].mobility.constraintAreaMinY = 200m
*.bunker1host[*].mobility.constraintAreaMaxY = 600m

*.bunker2host[*].mobility.initialMovementHeading = 0deg
*.bunker2host[*].mobility.initialX = 1110m
*.bunker2host[*].mobility.initialY = 3250m
*.bunker2host[*].mobility.constraintAreaMinX = 900m
*.bunker2host[*].mobility.constraintAreaMaxX = 1400m
*.bunker2host[*].mobility.constraintAreaMinY = 3100m
*.bunker2host[*].mobility.constraintAreaMaxY = 3500m

*.bunker3host[*].mobility.initialMovementHeading = 90deg
*.bunker3host[*].mobility.initialX = 4350m
*.bunker3host[*].mobility.initialY = 475m
*.bunker3host[*].mobility.constraintAreaMinX = 4300m
*.bunker3host[*].mobility.constraintAreaMaxX = 4700m
*.bunker3host[*].mobility.constraintAreaMinY = 200m
*.bunker3host[*].mobility.constraintAreaMaxY = 650m
#----------------------------------------------------------------------------------------------------------------
# resources available
*.mecHost*.maxMECApps = 1
*.mecHost*.maxRam = 32GB
*.mecHost*.maxDisk = 100TB
*.mecHost*.maxCpuSpeed = 400000
#----------------------------------------
*.bunker1gnb1.mecHost = "mecHost1"
*.bunker2gnb1.mecHost = "mecHost2"
*.bunker3gnb1.mecHost = "mecHost3"

*.mecHost1.bsList = "bunker1gnb1"
*.mecHost2.bsList = "bunker2gnb1"
*.mecHost3.bsList = "bunker3gnb1"

*.mecHost*.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
**.mecHost*.virtualisationInfrastructure.ipv4.forwarding = true
**.hasRNISupport = true
#-------ETSI MEC Services:---------------
*.mecHost*.mecPlatform.numMecServices = 0
#------- MEC orchestrator---------------
**.mecOrchestrator.mecHostList = "mecHost1, mecHost2, mecHost3"

[Config cableLength_2000km]
*.cableLength = 2000km
output-scalar-file  = results/cableLength_2000km/cableLength_2000km.sca
output-vector-file  = results/cableLength_2000km/cableLength_2000km.vec
[Config cableBandwidth_1000Mbps]
*.cableBandwidth = 1000Mbps
*.closeCableBandwidth = 1000Mbps
output-scalar-file  = results/cableBandwidth_1000Mbps/cableBandwidth_1000Mbps.sca
output-vector-file  = results/cableBandwidth_1000Mbps/cableBandwidth_1000Mbps.vec
[Config serverRouterBufferCapacity_1]
*.*router.ppp[*].queue.packetCapacity = 1
output-scalar-file  = results/serverRouterBufferCapacity_1/serverRouterBufferCapacity_1.sca
output-vector-file  = results/serverRouterBufferCapacity_1/serverRouterBufferCapacity_1.vec
[Config clearHeartBeatDropObservation]
*.server.app[0].heartbeatThreshold = 3
output-scalar-file  = results/clearHeartBeatDropObservation/clearHeartBeatDropObservation.sca
output-vector-file  = results/clearHeartBeatDropObservation/clearHeartBeatDropObservation.vec
[Config moderateClientAmount]
*.bunker1_host_number = ${config1num=int(uniform(25, 25))}
*.bunker2_host_number = ${config2num=int(uniform(25, 25))}
*.bunker3_host_number = ${config3num=int(uniform(25, 25))}
*.bunker*host[*].app[1].bunker1_host_number = ${config1num}
*.bunker*host[*].app[1].bunker2_host_number = ${config2num}
*.bunker*host[*].app[1].bunker3_host_number = ${config3num}
output-scalar-file  = results/moderateClientAmount/moderateClientAmount.sca
output-vector-file  = results/moderateClientAmount/moderateClientAmount.vec
[Config highClientAmount]
*.bunker1_host_number = ${config1num=int(uniform(40, 40))}
*.bunker2_host_number = ${config2num=int(uniform(40, 40))}
*.bunker3_host_number = ${config3num=int(uniform(40, 40))}
*.bunker*host[*].app[1].bunker1_host_number = ${config1num}
*.bunker*host[*].app[1].bunker2_host_number = ${config2num}
*.bunker*host[*].app[1].bunker3_host_number = ${config3num}
output-scalar-file  = results/highClientAmount/highClientAmount.sca
output-vector-file  = results/highClientAmount/highClientAmount.vec
[Config noNonExistingClient]
*.nonExist_host_number = ${clientxnum=int(uniform(0, 0))}
*.bunker*host[*].app[1].nonExist_host_number = ${xnum}
output-scalar-file  = results/noNonExistingClient/noNonExistingClient.sca
output-vector-file  = results/noNonExistingClient/noNonExistingClient.vec
[Config highNonExistingClient]
*.nonExist_host_number = ${clientxnum=int(uniform(5, 5))}
*.bunker*host[*].app[1].nonExist_host_number = ${xnum}
output-scalar-file  = results/highNonExistingClient/highNonExistingClient.sca
output-vector-file  = results/highNonExistingClient/highNonExistingClient.vec
[Config centralizedWarningAlert]
*.bunker1host[0].app[2].isCentralized = true
*.bunker2host[0].app[2].isCentralized = true
*.bunker3host[0].app[2].isCentralized = true
output-scalar-file  = results/centralizedWarningAlert/centralizedWarningAlert.sca
output-vector-file  = results/centralizedWarningAlert/centralizedWarningAlert.vec